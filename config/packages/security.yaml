security:
    # Gestion du hash des mots de passe
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # Déclaration du provider (utilise ton entité User)
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Configuration du pare-feu principal
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    # Règles d’accès
    access_control:
      - { path: ^/api/login, roles: PUBLIC_ACCESS }
      - { path: ^/api, roles: ROLE_ADMIN }
      - { path: ^/admin, roles: ROLE_ADMIN }
      - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            App\Entity\User:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10

